///
//  Generated code. Do not modify.
//  source: grafeas/v1/vulnerability.proto
//
// @dart = 2.12
// ignore_for_file: annotate_overrides,camel_case_types,constant_identifier_names,directives_ordering,library_prefixes,non_constant_identifier_names,prefer_final_fields,return_of_invalid_type,unnecessary_const,unnecessary_import,unnecessary_this,unused_import,unused_shown_name

import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

import 'cvss.pb.dart' as $0;
import '../../google/protobuf/timestamp.pb.dart' as $1;
import 'package.pb.dart' as $2;
import 'common.pb.dart' as $3;
import 'vex.pb.dart' as $4;

import 'severity.pbenum.dart' as $5;
import 'cvss.pbenum.dart' as $0;
import 'vex.pbenum.dart' as $4;

class VulnerabilityNote_Detail extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityNote.Detail',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..aOS(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'severityName')
    ..aOS(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'description')
    ..aOS(
        3,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'packageType')
    ..aOS(
        4,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedCpeUri')
    ..aOS(
        5,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedPackage')
    ..aOM<$2.Version>(
        6,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedVersionStart',
        subBuilder: $2.Version.create)
    ..aOM<$2.Version>(
        7,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedVersionEnd',
        subBuilder: $2.Version.create)
    ..aOS(
        8,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixedCpeUri')
    ..aOS(
        9,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixedPackage')
    ..aOM<$2.Version>(
        10,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixedVersion',
        subBuilder: $2.Version.create)
    ..aOB(
        11,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'isObsolete')
    ..aOM<$1.Timestamp>(
        12,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'sourceUpdateTime',
        subBuilder: $1.Timestamp.create)
    ..aOS(
        13,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'source')
    ..aOS(
        14,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'vendor')
    ..hasRequiredFields = false;

  VulnerabilityNote_Detail._() : super();
  factory VulnerabilityNote_Detail({
    $core.String? severityName,
    $core.String? description,
    $core.String? packageType,
    $core.String? affectedCpeUri,
    $core.String? affectedPackage,
    $2.Version? affectedVersionStart,
    $2.Version? affectedVersionEnd,
    $core.String? fixedCpeUri,
    $core.String? fixedPackage,
    $2.Version? fixedVersion,
    $core.bool? isObsolete,
    $1.Timestamp? sourceUpdateTime,
    $core.String? source,
    $core.String? vendor,
  }) {
    final _result = create();
    if (severityName != null) {
      _result.severityName = severityName;
    }
    if (description != null) {
      _result.description = description;
    }
    if (packageType != null) {
      _result.packageType = packageType;
    }
    if (affectedCpeUri != null) {
      _result.affectedCpeUri = affectedCpeUri;
    }
    if (affectedPackage != null) {
      _result.affectedPackage = affectedPackage;
    }
    if (affectedVersionStart != null) {
      _result.affectedVersionStart = affectedVersionStart;
    }
    if (affectedVersionEnd != null) {
      _result.affectedVersionEnd = affectedVersionEnd;
    }
    if (fixedCpeUri != null) {
      _result.fixedCpeUri = fixedCpeUri;
    }
    if (fixedPackage != null) {
      _result.fixedPackage = fixedPackage;
    }
    if (fixedVersion != null) {
      _result.fixedVersion = fixedVersion;
    }
    if (isObsolete != null) {
      _result.isObsolete = isObsolete;
    }
    if (sourceUpdateTime != null) {
      _result.sourceUpdateTime = sourceUpdateTime;
    }
    if (source != null) {
      _result.source = source;
    }
    if (vendor != null) {
      _result.vendor = vendor;
    }
    return _result;
  }
  factory VulnerabilityNote_Detail.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityNote_Detail.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityNote_Detail clone() =>
      VulnerabilityNote_Detail()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityNote_Detail copyWith(
          void Function(VulnerabilityNote_Detail) updates) =>
      super.copyWith((message) => updates(message as VulnerabilityNote_Detail))
          as VulnerabilityNote_Detail; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote_Detail create() => VulnerabilityNote_Detail._();
  VulnerabilityNote_Detail createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityNote_Detail> createRepeated() =>
      $pb.PbList<VulnerabilityNote_Detail>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote_Detail getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityNote_Detail>(create);
  static VulnerabilityNote_Detail? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get severityName => $_getSZ(0);
  @$pb.TagNumber(1)
  set severityName($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasSeverityName() => $_has(0);
  @$pb.TagNumber(1)
  void clearSeverityName() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get description => $_getSZ(1);
  @$pb.TagNumber(2)
  set description($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasDescription() => $_has(1);
  @$pb.TagNumber(2)
  void clearDescription() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get packageType => $_getSZ(2);
  @$pb.TagNumber(3)
  set packageType($core.String v) {
    $_setString(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasPackageType() => $_has(2);
  @$pb.TagNumber(3)
  void clearPackageType() => clearField(3);

  @$pb.TagNumber(4)
  $core.String get affectedCpeUri => $_getSZ(3);
  @$pb.TagNumber(4)
  set affectedCpeUri($core.String v) {
    $_setString(3, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasAffectedCpeUri() => $_has(3);
  @$pb.TagNumber(4)
  void clearAffectedCpeUri() => clearField(4);

  @$pb.TagNumber(5)
  $core.String get affectedPackage => $_getSZ(4);
  @$pb.TagNumber(5)
  set affectedPackage($core.String v) {
    $_setString(4, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasAffectedPackage() => $_has(4);
  @$pb.TagNumber(5)
  void clearAffectedPackage() => clearField(5);

  @$pb.TagNumber(6)
  $2.Version get affectedVersionStart => $_getN(5);
  @$pb.TagNumber(6)
  set affectedVersionStart($2.Version v) {
    setField(6, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasAffectedVersionStart() => $_has(5);
  @$pb.TagNumber(6)
  void clearAffectedVersionStart() => clearField(6);
  @$pb.TagNumber(6)
  $2.Version ensureAffectedVersionStart() => $_ensure(5);

  @$pb.TagNumber(7)
  $2.Version get affectedVersionEnd => $_getN(6);
  @$pb.TagNumber(7)
  set affectedVersionEnd($2.Version v) {
    setField(7, v);
  }

  @$pb.TagNumber(7)
  $core.bool hasAffectedVersionEnd() => $_has(6);
  @$pb.TagNumber(7)
  void clearAffectedVersionEnd() => clearField(7);
  @$pb.TagNumber(7)
  $2.Version ensureAffectedVersionEnd() => $_ensure(6);

  @$pb.TagNumber(8)
  $core.String get fixedCpeUri => $_getSZ(7);
  @$pb.TagNumber(8)
  set fixedCpeUri($core.String v) {
    $_setString(7, v);
  }

  @$pb.TagNumber(8)
  $core.bool hasFixedCpeUri() => $_has(7);
  @$pb.TagNumber(8)
  void clearFixedCpeUri() => clearField(8);

  @$pb.TagNumber(9)
  $core.String get fixedPackage => $_getSZ(8);
  @$pb.TagNumber(9)
  set fixedPackage($core.String v) {
    $_setString(8, v);
  }

  @$pb.TagNumber(9)
  $core.bool hasFixedPackage() => $_has(8);
  @$pb.TagNumber(9)
  void clearFixedPackage() => clearField(9);

  @$pb.TagNumber(10)
  $2.Version get fixedVersion => $_getN(9);
  @$pb.TagNumber(10)
  set fixedVersion($2.Version v) {
    setField(10, v);
  }

  @$pb.TagNumber(10)
  $core.bool hasFixedVersion() => $_has(9);
  @$pb.TagNumber(10)
  void clearFixedVersion() => clearField(10);
  @$pb.TagNumber(10)
  $2.Version ensureFixedVersion() => $_ensure(9);

  @$pb.TagNumber(11)
  $core.bool get isObsolete => $_getBF(10);
  @$pb.TagNumber(11)
  set isObsolete($core.bool v) {
    $_setBool(10, v);
  }

  @$pb.TagNumber(11)
  $core.bool hasIsObsolete() => $_has(10);
  @$pb.TagNumber(11)
  void clearIsObsolete() => clearField(11);

  @$pb.TagNumber(12)
  $1.Timestamp get sourceUpdateTime => $_getN(11);
  @$pb.TagNumber(12)
  set sourceUpdateTime($1.Timestamp v) {
    setField(12, v);
  }

  @$pb.TagNumber(12)
  $core.bool hasSourceUpdateTime() => $_has(11);
  @$pb.TagNumber(12)
  void clearSourceUpdateTime() => clearField(12);
  @$pb.TagNumber(12)
  $1.Timestamp ensureSourceUpdateTime() => $_ensure(11);

  @$pb.TagNumber(13)
  $core.String get source => $_getSZ(12);
  @$pb.TagNumber(13)
  set source($core.String v) {
    $_setString(12, v);
  }

  @$pb.TagNumber(13)
  $core.bool hasSource() => $_has(12);
  @$pb.TagNumber(13)
  void clearSource() => clearField(13);

  @$pb.TagNumber(14)
  $core.String get vendor => $_getSZ(13);
  @$pb.TagNumber(14)
  set vendor($core.String v) {
    $_setString(13, v);
  }

  @$pb.TagNumber(14)
  $core.bool hasVendor() => $_has(13);
  @$pb.TagNumber(14)
  void clearVendor() => clearField(14);
}

class VulnerabilityNote_WindowsDetail_KnowledgeBase
    extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityNote.WindowsDetail.KnowledgeBase',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..aOS(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'name')
    ..aOS(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'url')
    ..hasRequiredFields = false;

  VulnerabilityNote_WindowsDetail_KnowledgeBase._() : super();
  factory VulnerabilityNote_WindowsDetail_KnowledgeBase({
    $core.String? name,
    $core.String? url,
  }) {
    final _result = create();
    if (name != null) {
      _result.name = name;
    }
    if (url != null) {
      _result.url = url;
    }
    return _result;
  }
  factory VulnerabilityNote_WindowsDetail_KnowledgeBase.fromBuffer(
          $core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityNote_WindowsDetail_KnowledgeBase.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityNote_WindowsDetail_KnowledgeBase clone() =>
      VulnerabilityNote_WindowsDetail_KnowledgeBase()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityNote_WindowsDetail_KnowledgeBase copyWith(
          void Function(VulnerabilityNote_WindowsDetail_KnowledgeBase)
              updates) =>
      super.copyWith((message) =>
              updates(message as VulnerabilityNote_WindowsDetail_KnowledgeBase))
          as VulnerabilityNote_WindowsDetail_KnowledgeBase; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote_WindowsDetail_KnowledgeBase create() =>
      VulnerabilityNote_WindowsDetail_KnowledgeBase._();
  VulnerabilityNote_WindowsDetail_KnowledgeBase createEmptyInstance() =>
      create();
  static $pb.PbList<VulnerabilityNote_WindowsDetail_KnowledgeBase>
      createRepeated() =>
          $pb.PbList<VulnerabilityNote_WindowsDetail_KnowledgeBase>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote_WindowsDetail_KnowledgeBase getDefault() =>
      _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<
          VulnerabilityNote_WindowsDetail_KnowledgeBase>(create);
  static VulnerabilityNote_WindowsDetail_KnowledgeBase? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get name => $_getSZ(0);
  @$pb.TagNumber(1)
  set name($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasName() => $_has(0);
  @$pb.TagNumber(1)
  void clearName() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get url => $_getSZ(1);
  @$pb.TagNumber(2)
  set url($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasUrl() => $_has(1);
  @$pb.TagNumber(2)
  void clearUrl() => clearField(2);
}

class VulnerabilityNote_WindowsDetail extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityNote.WindowsDetail',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..aOS(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cpeUri')
    ..aOS(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'name')
    ..aOS(
        3,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'description')
    ..pc<VulnerabilityNote_WindowsDetail_KnowledgeBase>(
        4,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixingKbs',
        $pb.PbFieldType.PM,
        subBuilder: VulnerabilityNote_WindowsDetail_KnowledgeBase.create)
    ..hasRequiredFields = false;

  VulnerabilityNote_WindowsDetail._() : super();
  factory VulnerabilityNote_WindowsDetail({
    $core.String? cpeUri,
    $core.String? name,
    $core.String? description,
    $core.Iterable<VulnerabilityNote_WindowsDetail_KnowledgeBase>? fixingKbs,
  }) {
    final _result = create();
    if (cpeUri != null) {
      _result.cpeUri = cpeUri;
    }
    if (name != null) {
      _result.name = name;
    }
    if (description != null) {
      _result.description = description;
    }
    if (fixingKbs != null) {
      _result.fixingKbs.addAll(fixingKbs);
    }
    return _result;
  }
  factory VulnerabilityNote_WindowsDetail.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityNote_WindowsDetail.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityNote_WindowsDetail clone() =>
      VulnerabilityNote_WindowsDetail()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityNote_WindowsDetail copyWith(
          void Function(VulnerabilityNote_WindowsDetail) updates) =>
      super.copyWith(
              (message) => updates(message as VulnerabilityNote_WindowsDetail))
          as VulnerabilityNote_WindowsDetail; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote_WindowsDetail create() =>
      VulnerabilityNote_WindowsDetail._();
  VulnerabilityNote_WindowsDetail createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityNote_WindowsDetail> createRepeated() =>
      $pb.PbList<VulnerabilityNote_WindowsDetail>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote_WindowsDetail getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityNote_WindowsDetail>(
          create);
  static VulnerabilityNote_WindowsDetail? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get cpeUri => $_getSZ(0);
  @$pb.TagNumber(1)
  set cpeUri($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCpeUri() => $_has(0);
  @$pb.TagNumber(1)
  void clearCpeUri() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get name => $_getSZ(1);
  @$pb.TagNumber(2)
  set name($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasName() => $_has(1);
  @$pb.TagNumber(2)
  void clearName() => clearField(2);

  @$pb.TagNumber(3)
  $core.String get description => $_getSZ(2);
  @$pb.TagNumber(3)
  set description($core.String v) {
    $_setString(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasDescription() => $_has(2);
  @$pb.TagNumber(3)
  void clearDescription() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<VulnerabilityNote_WindowsDetail_KnowledgeBase> get fixingKbs =>
      $_getList(3);
}

class VulnerabilityNote extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityNote',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..a<$core.double>(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssScore',
        $pb.PbFieldType.OF)
    ..e<$5.Severity>(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'severity',
        $pb.PbFieldType.OE,
        defaultOrMaker: $5.Severity.SEVERITY_UNSPECIFIED,
        valueOf: $5.Severity.valueOf,
        enumValues: $5.Severity.values)
    ..pc<VulnerabilityNote_Detail>(
        3,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'details',
        $pb.PbFieldType.PM,
        subBuilder: VulnerabilityNote_Detail.create)
    ..aOM<$0.CVSSv3>(
        4,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssV3',
        subBuilder: $0.CVSSv3.create)
    ..pc<VulnerabilityNote_WindowsDetail>(
        5,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'windowsDetails',
        $pb.PbFieldType.PM,
        subBuilder: VulnerabilityNote_WindowsDetail.create)
    ..aOM<$1.Timestamp>(
        6,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'sourceUpdateTime',
        subBuilder: $1.Timestamp.create)
    ..e<$0.CVSSVersion>(
        7,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssVersion',
        $pb.PbFieldType.OE,
        defaultOrMaker: $0.CVSSVersion.CVSS_VERSION_UNSPECIFIED,
        valueOf: $0.CVSSVersion.valueOf,
        enumValues: $0.CVSSVersion.values)
    ..aOM<$0.CVSS>(
        8,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssV2',
        subBuilder: $0.CVSS.create)
    ..hasRequiredFields = false;

  VulnerabilityNote._() : super();
  factory VulnerabilityNote({
    $core.double? cvssScore,
    $5.Severity? severity,
    $core.Iterable<VulnerabilityNote_Detail>? details,
    $0.CVSSv3? cvssV3,
    $core.Iterable<VulnerabilityNote_WindowsDetail>? windowsDetails,
    $1.Timestamp? sourceUpdateTime,
    $0.CVSSVersion? cvssVersion,
    $0.CVSS? cvssV2,
  }) {
    final _result = create();
    if (cvssScore != null) {
      _result.cvssScore = cvssScore;
    }
    if (severity != null) {
      _result.severity = severity;
    }
    if (details != null) {
      _result.details.addAll(details);
    }
    if (cvssV3 != null) {
      _result.cvssV3 = cvssV3;
    }
    if (windowsDetails != null) {
      _result.windowsDetails.addAll(windowsDetails);
    }
    if (sourceUpdateTime != null) {
      _result.sourceUpdateTime = sourceUpdateTime;
    }
    if (cvssVersion != null) {
      _result.cvssVersion = cvssVersion;
    }
    if (cvssV2 != null) {
      _result.cvssV2 = cvssV2;
    }
    return _result;
  }
  factory VulnerabilityNote.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityNote.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityNote clone() => VulnerabilityNote()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityNote copyWith(void Function(VulnerabilityNote) updates) =>
      super.copyWith((message) => updates(message as VulnerabilityNote))
          as VulnerabilityNote; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote create() => VulnerabilityNote._();
  VulnerabilityNote createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityNote> createRepeated() =>
      $pb.PbList<VulnerabilityNote>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityNote getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityNote>(create);
  static VulnerabilityNote? _defaultInstance;

  @$pb.TagNumber(1)
  $core.double get cvssScore => $_getN(0);
  @$pb.TagNumber(1)
  set cvssScore($core.double v) {
    $_setFloat(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCvssScore() => $_has(0);
  @$pb.TagNumber(1)
  void clearCvssScore() => clearField(1);

  @$pb.TagNumber(2)
  $5.Severity get severity => $_getN(1);
  @$pb.TagNumber(2)
  set severity($5.Severity v) {
    setField(2, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasSeverity() => $_has(1);
  @$pb.TagNumber(2)
  void clearSeverity() => clearField(2);

  @$pb.TagNumber(3)
  $core.List<VulnerabilityNote_Detail> get details => $_getList(2);

  @$pb.TagNumber(4)
  $0.CVSSv3 get cvssV3 => $_getN(3);
  @$pb.TagNumber(4)
  set cvssV3($0.CVSSv3 v) {
    setField(4, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasCvssV3() => $_has(3);
  @$pb.TagNumber(4)
  void clearCvssV3() => clearField(4);
  @$pb.TagNumber(4)
  $0.CVSSv3 ensureCvssV3() => $_ensure(3);

  @$pb.TagNumber(5)
  $core.List<VulnerabilityNote_WindowsDetail> get windowsDetails =>
      $_getList(4);

  @$pb.TagNumber(6)
  $1.Timestamp get sourceUpdateTime => $_getN(5);
  @$pb.TagNumber(6)
  set sourceUpdateTime($1.Timestamp v) {
    setField(6, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasSourceUpdateTime() => $_has(5);
  @$pb.TagNumber(6)
  void clearSourceUpdateTime() => clearField(6);
  @$pb.TagNumber(6)
  $1.Timestamp ensureSourceUpdateTime() => $_ensure(5);

  @$pb.TagNumber(7)
  $0.CVSSVersion get cvssVersion => $_getN(6);
  @$pb.TagNumber(7)
  set cvssVersion($0.CVSSVersion v) {
    setField(7, v);
  }

  @$pb.TagNumber(7)
  $core.bool hasCvssVersion() => $_has(6);
  @$pb.TagNumber(7)
  void clearCvssVersion() => clearField(7);

  @$pb.TagNumber(8)
  $0.CVSS get cvssV2 => $_getN(7);
  @$pb.TagNumber(8)
  set cvssV2($0.CVSS v) {
    setField(8, v);
  }

  @$pb.TagNumber(8)
  $core.bool hasCvssV2() => $_has(7);
  @$pb.TagNumber(8)
  void clearCvssV2() => clearField(8);
  @$pb.TagNumber(8)
  $0.CVSS ensureCvssV2() => $_ensure(7);
}

class VulnerabilityOccurrence_PackageIssue extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityOccurrence.PackageIssue',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..aOS(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedCpeUri')
    ..aOS(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedPackage')
    ..aOM<$2.Version>(
        3,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'affectedVersion',
        subBuilder: $2.Version.create)
    ..aOS(
        4,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixedCpeUri')
    ..aOS(
        5,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixedPackage')
    ..aOM<$2.Version>(
        6,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixedVersion',
        subBuilder: $2.Version.create)
    ..aOB(
        7,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixAvailable')
    ..aOS(
        8,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'packageType')
    ..e<$5.Severity>(
        9,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'effectiveSeverity',
        $pb.PbFieldType.OE,
        defaultOrMaker: $5.Severity.SEVERITY_UNSPECIFIED,
        valueOf: $5.Severity.valueOf,
        enumValues: $5.Severity.values)
    ..pc<$3.FileLocation>(
        10,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fileLocation',
        $pb.PbFieldType.PM,
        subBuilder: $3.FileLocation.create)
    ..hasRequiredFields = false;

  VulnerabilityOccurrence_PackageIssue._() : super();
  factory VulnerabilityOccurrence_PackageIssue({
    $core.String? affectedCpeUri,
    $core.String? affectedPackage,
    $2.Version? affectedVersion,
    $core.String? fixedCpeUri,
    $core.String? fixedPackage,
    $2.Version? fixedVersion,
    $core.bool? fixAvailable,
    $core.String? packageType,
    $5.Severity? effectiveSeverity,
    $core.Iterable<$3.FileLocation>? fileLocation,
  }) {
    final _result = create();
    if (affectedCpeUri != null) {
      _result.affectedCpeUri = affectedCpeUri;
    }
    if (affectedPackage != null) {
      _result.affectedPackage = affectedPackage;
    }
    if (affectedVersion != null) {
      _result.affectedVersion = affectedVersion;
    }
    if (fixedCpeUri != null) {
      _result.fixedCpeUri = fixedCpeUri;
    }
    if (fixedPackage != null) {
      _result.fixedPackage = fixedPackage;
    }
    if (fixedVersion != null) {
      _result.fixedVersion = fixedVersion;
    }
    if (fixAvailable != null) {
      _result.fixAvailable = fixAvailable;
    }
    if (packageType != null) {
      _result.packageType = packageType;
    }
    if (effectiveSeverity != null) {
      _result.effectiveSeverity = effectiveSeverity;
    }
    if (fileLocation != null) {
      _result.fileLocation.addAll(fileLocation);
    }
    return _result;
  }
  factory VulnerabilityOccurrence_PackageIssue.fromBuffer(
          $core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityOccurrence_PackageIssue.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityOccurrence_PackageIssue clone() =>
      VulnerabilityOccurrence_PackageIssue()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityOccurrence_PackageIssue copyWith(
          void Function(VulnerabilityOccurrence_PackageIssue) updates) =>
      super.copyWith((message) =>
              updates(message as VulnerabilityOccurrence_PackageIssue))
          as VulnerabilityOccurrence_PackageIssue; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityOccurrence_PackageIssue create() =>
      VulnerabilityOccurrence_PackageIssue._();
  VulnerabilityOccurrence_PackageIssue createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityOccurrence_PackageIssue> createRepeated() =>
      $pb.PbList<VulnerabilityOccurrence_PackageIssue>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityOccurrence_PackageIssue getDefault() =>
      _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<
          VulnerabilityOccurrence_PackageIssue>(create);
  static VulnerabilityOccurrence_PackageIssue? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get affectedCpeUri => $_getSZ(0);
  @$pb.TagNumber(1)
  set affectedCpeUri($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasAffectedCpeUri() => $_has(0);
  @$pb.TagNumber(1)
  void clearAffectedCpeUri() => clearField(1);

  @$pb.TagNumber(2)
  $core.String get affectedPackage => $_getSZ(1);
  @$pb.TagNumber(2)
  set affectedPackage($core.String v) {
    $_setString(1, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasAffectedPackage() => $_has(1);
  @$pb.TagNumber(2)
  void clearAffectedPackage() => clearField(2);

  @$pb.TagNumber(3)
  $2.Version get affectedVersion => $_getN(2);
  @$pb.TagNumber(3)
  set affectedVersion($2.Version v) {
    setField(3, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasAffectedVersion() => $_has(2);
  @$pb.TagNumber(3)
  void clearAffectedVersion() => clearField(3);
  @$pb.TagNumber(3)
  $2.Version ensureAffectedVersion() => $_ensure(2);

  @$pb.TagNumber(4)
  $core.String get fixedCpeUri => $_getSZ(3);
  @$pb.TagNumber(4)
  set fixedCpeUri($core.String v) {
    $_setString(3, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasFixedCpeUri() => $_has(3);
  @$pb.TagNumber(4)
  void clearFixedCpeUri() => clearField(4);

  @$pb.TagNumber(5)
  $core.String get fixedPackage => $_getSZ(4);
  @$pb.TagNumber(5)
  set fixedPackage($core.String v) {
    $_setString(4, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasFixedPackage() => $_has(4);
  @$pb.TagNumber(5)
  void clearFixedPackage() => clearField(5);

  @$pb.TagNumber(6)
  $2.Version get fixedVersion => $_getN(5);
  @$pb.TagNumber(6)
  set fixedVersion($2.Version v) {
    setField(6, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasFixedVersion() => $_has(5);
  @$pb.TagNumber(6)
  void clearFixedVersion() => clearField(6);
  @$pb.TagNumber(6)
  $2.Version ensureFixedVersion() => $_ensure(5);

  @$pb.TagNumber(7)
  $core.bool get fixAvailable => $_getBF(6);
  @$pb.TagNumber(7)
  set fixAvailable($core.bool v) {
    $_setBool(6, v);
  }

  @$pb.TagNumber(7)
  $core.bool hasFixAvailable() => $_has(6);
  @$pb.TagNumber(7)
  void clearFixAvailable() => clearField(7);

  @$pb.TagNumber(8)
  $core.String get packageType => $_getSZ(7);
  @$pb.TagNumber(8)
  set packageType($core.String v) {
    $_setString(7, v);
  }

  @$pb.TagNumber(8)
  $core.bool hasPackageType() => $_has(7);
  @$pb.TagNumber(8)
  void clearPackageType() => clearField(8);

  @$pb.TagNumber(9)
  $5.Severity get effectiveSeverity => $_getN(8);
  @$pb.TagNumber(9)
  set effectiveSeverity($5.Severity v) {
    setField(9, v);
  }

  @$pb.TagNumber(9)
  $core.bool hasEffectiveSeverity() => $_has(8);
  @$pb.TagNumber(9)
  void clearEffectiveSeverity() => clearField(9);

  @$pb.TagNumber(10)
  $core.List<$3.FileLocation> get fileLocation => $_getList(9);
}

class VulnerabilityOccurrence_VexAssessment extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityOccurrence.VexAssessment',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..aOS(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cve')
    ..pc<$3.RelatedUrl>(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'relatedUris',
        $pb.PbFieldType.PM,
        subBuilder: $3.RelatedUrl.create)
    ..aOS(
        3,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'noteName')
    ..e<$4.VulnerabilityAssessmentNote_Assessment_State>(
        4,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'state',
        $pb.PbFieldType.OE,
        defaultOrMaker:
            $4.VulnerabilityAssessmentNote_Assessment_State.STATE_UNSPECIFIED,
        valueOf: $4.VulnerabilityAssessmentNote_Assessment_State.valueOf,
        enumValues: $4.VulnerabilityAssessmentNote_Assessment_State.values)
    ..pPS(
        5,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'impacts')
    ..pc<$4.VulnerabilityAssessmentNote_Assessment_Remediation>(
        6,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'remediations',
        $pb.PbFieldType.PM,
        subBuilder:
            $4.VulnerabilityAssessmentNote_Assessment_Remediation.create)
    ..aOM<$4.VulnerabilityAssessmentNote_Assessment_Justification>(
        7,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'justification',
        subBuilder:
            $4.VulnerabilityAssessmentNote_Assessment_Justification.create)
    ..hasRequiredFields = false;

  VulnerabilityOccurrence_VexAssessment._() : super();
  factory VulnerabilityOccurrence_VexAssessment({
    $core.String? cve,
    $core.Iterable<$3.RelatedUrl>? relatedUris,
    $core.String? noteName,
    $4.VulnerabilityAssessmentNote_Assessment_State? state,
    $core.Iterable<$core.String>? impacts,
    $core.Iterable<$4.VulnerabilityAssessmentNote_Assessment_Remediation>?
        remediations,
    $4.VulnerabilityAssessmentNote_Assessment_Justification? justification,
  }) {
    final _result = create();
    if (cve != null) {
      _result.cve = cve;
    }
    if (relatedUris != null) {
      _result.relatedUris.addAll(relatedUris);
    }
    if (noteName != null) {
      _result.noteName = noteName;
    }
    if (state != null) {
      _result.state = state;
    }
    if (impacts != null) {
      _result.impacts.addAll(impacts);
    }
    if (remediations != null) {
      _result.remediations.addAll(remediations);
    }
    if (justification != null) {
      _result.justification = justification;
    }
    return _result;
  }
  factory VulnerabilityOccurrence_VexAssessment.fromBuffer(
          $core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityOccurrence_VexAssessment.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityOccurrence_VexAssessment clone() =>
      VulnerabilityOccurrence_VexAssessment()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityOccurrence_VexAssessment copyWith(
          void Function(VulnerabilityOccurrence_VexAssessment) updates) =>
      super.copyWith((message) =>
              updates(message as VulnerabilityOccurrence_VexAssessment))
          as VulnerabilityOccurrence_VexAssessment; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityOccurrence_VexAssessment create() =>
      VulnerabilityOccurrence_VexAssessment._();
  VulnerabilityOccurrence_VexAssessment createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityOccurrence_VexAssessment> createRepeated() =>
      $pb.PbList<VulnerabilityOccurrence_VexAssessment>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityOccurrence_VexAssessment getDefault() =>
      _defaultInstance ??= $pb.GeneratedMessage.$_defaultFor<
          VulnerabilityOccurrence_VexAssessment>(create);
  static VulnerabilityOccurrence_VexAssessment? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get cve => $_getSZ(0);
  @$pb.TagNumber(1)
  set cve($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasCve() => $_has(0);
  @$pb.TagNumber(1)
  void clearCve() => clearField(1);

  @$pb.TagNumber(2)
  $core.List<$3.RelatedUrl> get relatedUris => $_getList(1);

  @$pb.TagNumber(3)
  $core.String get noteName => $_getSZ(2);
  @$pb.TagNumber(3)
  set noteName($core.String v) {
    $_setString(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasNoteName() => $_has(2);
  @$pb.TagNumber(3)
  void clearNoteName() => clearField(3);

  @$pb.TagNumber(4)
  $4.VulnerabilityAssessmentNote_Assessment_State get state => $_getN(3);
  @$pb.TagNumber(4)
  set state($4.VulnerabilityAssessmentNote_Assessment_State v) {
    setField(4, v);
  }

  @$pb.TagNumber(4)
  $core.bool hasState() => $_has(3);
  @$pb.TagNumber(4)
  void clearState() => clearField(4);

  @$pb.TagNumber(5)
  $core.List<$core.String> get impacts => $_getList(4);

  @$pb.TagNumber(6)
  $core.List<$4.VulnerabilityAssessmentNote_Assessment_Remediation>
      get remediations => $_getList(5);

  @$pb.TagNumber(7)
  $4.VulnerabilityAssessmentNote_Assessment_Justification get justification =>
      $_getN(6);
  @$pb.TagNumber(7)
  set justification($4.VulnerabilityAssessmentNote_Assessment_Justification v) {
    setField(7, v);
  }

  @$pb.TagNumber(7)
  $core.bool hasJustification() => $_has(6);
  @$pb.TagNumber(7)
  void clearJustification() => clearField(7);
  @$pb.TagNumber(7)
  $4.VulnerabilityAssessmentNote_Assessment_Justification
      ensureJustification() => $_ensure(6);
}

class VulnerabilityOccurrence extends $pb.GeneratedMessage {
  static final $pb.BuilderInfo _i = $pb.BuilderInfo(
      const $core.bool.fromEnvironment('protobuf.omit_message_names')
          ? ''
          : 'VulnerabilityOccurrence',
      package: const $pb.PackageName(
          const $core.bool.fromEnvironment('protobuf.omit_message_names')
              ? ''
              : 'grafeas.v1'),
      createEmptyInstance: create)
    ..aOS(
        1,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'type')
    ..e<$5.Severity>(
        2,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'severity',
        $pb.PbFieldType.OE,
        defaultOrMaker: $5.Severity.SEVERITY_UNSPECIFIED,
        valueOf: $5.Severity.valueOf,
        enumValues: $5.Severity.values)
    ..a<$core.double>(
        3,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssScore',
        $pb.PbFieldType.OF)
    ..pc<VulnerabilityOccurrence_PackageIssue>(
        4,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'packageIssue',
        $pb.PbFieldType.PM,
        subBuilder: VulnerabilityOccurrence_PackageIssue.create)
    ..aOS(
        5,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'shortDescription')
    ..aOS(
        6,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'longDescription')
    ..pc<$3.RelatedUrl>(
        7,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'relatedUrls',
        $pb.PbFieldType.PM,
        subBuilder: $3.RelatedUrl.create)
    ..e<$5.Severity>(
        8,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'effectiveSeverity',
        $pb.PbFieldType.OE,
        defaultOrMaker: $5.Severity.SEVERITY_UNSPECIFIED,
        valueOf: $5.Severity.valueOf,
        enumValues: $5.Severity.values)
    ..aOB(
        9,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'fixAvailable')
    ..aOM<$0.CVSS>(
        10,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssv3',
        subBuilder: $0.CVSS.create)
    ..e<$0.CVSSVersion>(
        11,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssVersion',
        $pb.PbFieldType.OE,
        defaultOrMaker: $0.CVSSVersion.CVSS_VERSION_UNSPECIFIED,
        valueOf: $0.CVSSVersion.valueOf,
        enumValues: $0.CVSSVersion.values)
    ..aOM<$0.CVSS>(
        12,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'cvssV2',
        subBuilder: $0.CVSS.create)
    ..aOM<VulnerabilityOccurrence_VexAssessment>(
        13,
        const $core.bool.fromEnvironment('protobuf.omit_field_names')
            ? ''
            : 'vexAssessment',
        subBuilder: VulnerabilityOccurrence_VexAssessment.create)
    ..hasRequiredFields = false;

  VulnerabilityOccurrence._() : super();
  factory VulnerabilityOccurrence({
    $core.String? type,
    $5.Severity? severity,
    $core.double? cvssScore,
    $core.Iterable<VulnerabilityOccurrence_PackageIssue>? packageIssue,
    $core.String? shortDescription,
    $core.String? longDescription,
    $core.Iterable<$3.RelatedUrl>? relatedUrls,
    $5.Severity? effectiveSeverity,
    $core.bool? fixAvailable,
    $0.CVSS? cvssv3,
    $0.CVSSVersion? cvssVersion,
    $0.CVSS? cvssV2,
    VulnerabilityOccurrence_VexAssessment? vexAssessment,
  }) {
    final _result = create();
    if (type != null) {
      _result.type = type;
    }
    if (severity != null) {
      _result.severity = severity;
    }
    if (cvssScore != null) {
      _result.cvssScore = cvssScore;
    }
    if (packageIssue != null) {
      _result.packageIssue.addAll(packageIssue);
    }
    if (shortDescription != null) {
      _result.shortDescription = shortDescription;
    }
    if (longDescription != null) {
      _result.longDescription = longDescription;
    }
    if (relatedUrls != null) {
      _result.relatedUrls.addAll(relatedUrls);
    }
    if (effectiveSeverity != null) {
      _result.effectiveSeverity = effectiveSeverity;
    }
    if (fixAvailable != null) {
      _result.fixAvailable = fixAvailable;
    }
    if (cvssv3 != null) {
      _result.cvssv3 = cvssv3;
    }
    if (cvssVersion != null) {
      _result.cvssVersion = cvssVersion;
    }
    if (cvssV2 != null) {
      _result.cvssV2 = cvssV2;
    }
    if (vexAssessment != null) {
      _result.vexAssessment = vexAssessment;
    }
    return _result;
  }
  factory VulnerabilityOccurrence.fromBuffer($core.List<$core.int> i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromBuffer(i, r);
  factory VulnerabilityOccurrence.fromJson($core.String i,
          [$pb.ExtensionRegistry r = $pb.ExtensionRegistry.EMPTY]) =>
      create()..mergeFromJson(i, r);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.deepCopy] instead. '
      'Will be removed in next major version')
  VulnerabilityOccurrence clone() =>
      VulnerabilityOccurrence()..mergeFromMessage(this);
  @$core.Deprecated('Using this can add significant overhead to your binary. '
      'Use [GeneratedMessageGenericExtensions.rebuild] instead. '
      'Will be removed in next major version')
  VulnerabilityOccurrence copyWith(
          void Function(VulnerabilityOccurrence) updates) =>
      super.copyWith((message) => updates(message as VulnerabilityOccurrence))
          as VulnerabilityOccurrence; // ignore: deprecated_member_use
  $pb.BuilderInfo get info_ => _i;
  @$core.pragma('dart2js:noInline')
  static VulnerabilityOccurrence create() => VulnerabilityOccurrence._();
  VulnerabilityOccurrence createEmptyInstance() => create();
  static $pb.PbList<VulnerabilityOccurrence> createRepeated() =>
      $pb.PbList<VulnerabilityOccurrence>();
  @$core.pragma('dart2js:noInline')
  static VulnerabilityOccurrence getDefault() => _defaultInstance ??=
      $pb.GeneratedMessage.$_defaultFor<VulnerabilityOccurrence>(create);
  static VulnerabilityOccurrence? _defaultInstance;

  @$pb.TagNumber(1)
  $core.String get type => $_getSZ(0);
  @$pb.TagNumber(1)
  set type($core.String v) {
    $_setString(0, v);
  }

  @$pb.TagNumber(1)
  $core.bool hasType() => $_has(0);
  @$pb.TagNumber(1)
  void clearType() => clearField(1);

  @$pb.TagNumber(2)
  $5.Severity get severity => $_getN(1);
  @$pb.TagNumber(2)
  set severity($5.Severity v) {
    setField(2, v);
  }

  @$pb.TagNumber(2)
  $core.bool hasSeverity() => $_has(1);
  @$pb.TagNumber(2)
  void clearSeverity() => clearField(2);

  @$pb.TagNumber(3)
  $core.double get cvssScore => $_getN(2);
  @$pb.TagNumber(3)
  set cvssScore($core.double v) {
    $_setFloat(2, v);
  }

  @$pb.TagNumber(3)
  $core.bool hasCvssScore() => $_has(2);
  @$pb.TagNumber(3)
  void clearCvssScore() => clearField(3);

  @$pb.TagNumber(4)
  $core.List<VulnerabilityOccurrence_PackageIssue> get packageIssue =>
      $_getList(3);

  @$pb.TagNumber(5)
  $core.String get shortDescription => $_getSZ(4);
  @$pb.TagNumber(5)
  set shortDescription($core.String v) {
    $_setString(4, v);
  }

  @$pb.TagNumber(5)
  $core.bool hasShortDescription() => $_has(4);
  @$pb.TagNumber(5)
  void clearShortDescription() => clearField(5);

  @$pb.TagNumber(6)
  $core.String get longDescription => $_getSZ(5);
  @$pb.TagNumber(6)
  set longDescription($core.String v) {
    $_setString(5, v);
  }

  @$pb.TagNumber(6)
  $core.bool hasLongDescription() => $_has(5);
  @$pb.TagNumber(6)
  void clearLongDescription() => clearField(6);

  @$pb.TagNumber(7)
  $core.List<$3.RelatedUrl> get relatedUrls => $_getList(6);

  @$pb.TagNumber(8)
  $5.Severity get effectiveSeverity => $_getN(7);
  @$pb.TagNumber(8)
  set effectiveSeverity($5.Severity v) {
    setField(8, v);
  }

  @$pb.TagNumber(8)
  $core.bool hasEffectiveSeverity() => $_has(7);
  @$pb.TagNumber(8)
  void clearEffectiveSeverity() => clearField(8);

  @$pb.TagNumber(9)
  $core.bool get fixAvailable => $_getBF(8);
  @$pb.TagNumber(9)
  set fixAvailable($core.bool v) {
    $_setBool(8, v);
  }

  @$pb.TagNumber(9)
  $core.bool hasFixAvailable() => $_has(8);
  @$pb.TagNumber(9)
  void clearFixAvailable() => clearField(9);

  @$pb.TagNumber(10)
  $0.CVSS get cvssv3 => $_getN(9);
  @$pb.TagNumber(10)
  set cvssv3($0.CVSS v) {
    setField(10, v);
  }

  @$pb.TagNumber(10)
  $core.bool hasCvssv3() => $_has(9);
  @$pb.TagNumber(10)
  void clearCvssv3() => clearField(10);
  @$pb.TagNumber(10)
  $0.CVSS ensureCvssv3() => $_ensure(9);

  @$pb.TagNumber(11)
  $0.CVSSVersion get cvssVersion => $_getN(10);
  @$pb.TagNumber(11)
  set cvssVersion($0.CVSSVersion v) {
    setField(11, v);
  }

  @$pb.TagNumber(11)
  $core.bool hasCvssVersion() => $_has(10);
  @$pb.TagNumber(11)
  void clearCvssVersion() => clearField(11);

  @$pb.TagNumber(12)
  $0.CVSS get cvssV2 => $_getN(11);
  @$pb.TagNumber(12)
  set cvssV2($0.CVSS v) {
    setField(12, v);
  }

  @$pb.TagNumber(12)
  $core.bool hasCvssV2() => $_has(11);
  @$pb.TagNumber(12)
  void clearCvssV2() => clearField(12);
  @$pb.TagNumber(12)
  $0.CVSS ensureCvssV2() => $_ensure(11);

  @$pb.TagNumber(13)
  VulnerabilityOccurrence_VexAssessment get vexAssessment => $_getN(12);
  @$pb.TagNumber(13)
  set vexAssessment(VulnerabilityOccurrence_VexAssessment v) {
    setField(13, v);
  }

  @$pb.TagNumber(13)
  $core.bool hasVexAssessment() => $_has(12);
  @$pb.TagNumber(13)
  void clearVexAssessment() => clearField(13);
  @$pb.TagNumber(13)
  VulnerabilityOccurrence_VexAssessment ensureVexAssessment() => $_ensure(12);
}
